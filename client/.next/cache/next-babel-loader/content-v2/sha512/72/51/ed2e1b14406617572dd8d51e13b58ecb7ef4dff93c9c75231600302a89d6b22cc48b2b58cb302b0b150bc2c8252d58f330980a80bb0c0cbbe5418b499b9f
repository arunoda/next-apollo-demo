{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n      users {\\n      firstname\\n      lastname\\n      address\\n      city\\n      state\\n      country\\n      phone\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nvar USERS = gql(_templateObject());\nexport var User = function User(_ref) {\n  _s();\n\n  var from = _ref.from,\n      qty = _ref.qty,\n      limit = _ref.limit;\n\n  var _useQuery = useQuery(USERS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState([]),\n      filteredUsers = _useState[0],\n      setFilteredUsers = _useState[1];\n\n  var getUsers = function getUsers(from, qty, limit) {\n    var firstUser = from;\n    var lastUser = from + qty - 1;\n    var filteredUsers = data.users.filter(function (item, index) {\n      return index <= lastUser;\n    });\n    return filteredUsers;\n  };\n\n  useEffect(function () {\n    if (data) {\n      setFilteredUsers(getUsers(from, qty, limit, data));\n    }\n  }, [data, from]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, _this);\n  return filteredUsers.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 10\n        }, _this), item.firstname, \" \", item.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this), item.address, item.city, item.state, item.country, item.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Telephone: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this), item.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this);\n  });\n};\n\n_s(User, \"wrrLrUqOSc/i3lVHy6oytoOECTU=\", false, function () {\n  return [useQuery];\n});\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.js"],"names":["React","useEffect","useState","useRef","useQuery","gql","USERS","User","from","qty","limit","loading","error","data","filteredUsers","setFilteredUsers","getUsers","firstUser","lastUser","users","filter","item","index","map","firstname","lastname","address","city","state","country","phone","id"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,IAAMC,KAAK,GAAGD,GAAH,mBAAX;AAcA,OAAO,IAAME,IAAI,GAAG,SAAPA,IAAO,OAA0B;AAAA;;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACXN,QAAQ,CAACE,KAAD,CADG;AAAA,MACpCK,OADoC,aACpCA,OADoC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,IADoB,aACpBA,IADoB;;AAAA,kBAEAX,QAAQ,CAAC,EAAD,CAFR;AAAA,MAEpCY,aAFoC;AAAA,MAErBC,gBAFqB;;AAI5C,MAAMC,QAAQ,GAAI,SAAZA,QAAY,CAACR,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAsB;AACpC,QAAMO,SAAS,GAAGT,IAAlB;AACA,QAAMU,QAAQ,GAAGV,IAAI,GAAGC,GAAP,GAAa,CAA9B;AACA,QAAMK,aAAa,GAAGD,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrD,aAASA,KAAK,IAAIJ,QAAlB;AACH,KAFqB,CAAtB;AAIA,WAAOJ,aAAP;AACH,GARD;;AAUAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGY,IAAH,EAAS;AACPE,MAAAA,gBAAgB,CAAEC,QAAQ,CAACR,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBG,IAAnB,CAAV,CAAhB;AACD;AACF,GAJQ,EAIP,CAACA,IAAD,EAAOL,IAAP,CAJO,CAAT;AAMA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,SACEE,aAAa,CAACS,GAAd,CAAkB,UAACF,IAAD;AAAA,wBAChB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,EACyBA,IAAI,CAACG,SAD9B,OAC0CH,IAAI,CAACI,QAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEIJ,IAAI,CAACK,OAFT,EAGIL,IAAI,CAACM,IAHT,EAIIN,IAAI,CAACO,KAJT,EAKIP,IAAI,CAACQ,OALT,EAMIR,IAAI,CAACS,KANT;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAYE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEIT,IAAI,CAACS,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA,OAA2BT,IAAI,CAACU,EAAhC;AAAA;AAAA;AAAA;AAAA,aADgB;AAAA,GAAlB,CADF;AAsBD,CA7CM;;GAAMxB,I;UACsBH,Q;;;KADtBG,I","sourcesContent":["\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nexport const User = ({ from, qty, limit }) => {\n  const { loading, error, data } = useQuery(USERS);\n  const [ filteredUsers, setFilteredUsers ] = useState([])\n\n  const getUsers =  (from, qty, limit) => {\n      const firstUser = from;\n      const lastUser = from + qty - 1;\n      const filteredUsers = data.users.filter((item, index) => {\n          return ( index <= lastUser );\n      })\n\n      return filteredUsers\n  }\n\n  useEffect(() => {\n    if(data) {\n      setFilteredUsers( getUsers(from, qty, limit, data) );\n    }\n  },[data, from])\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    filteredUsers.map((item) => (\n      <div className=\"card\" key={item.id}>\n        <p>\n         <strong>Name: </strong>{item.firstname} {item.lastname}\n        </p>\n        <p>\n          <strong>Address: </strong>\n          { item.address }\n          { item.city }\n          { item.state }\n          { item.country }\n          { item.phone }\n        </p>\n        <p>\n          <strong>Telephone: </strong>\n          { item.phone }\n        </p>\n      </div>\n    ))\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}