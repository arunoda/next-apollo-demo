{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/pages/index.js\";\nimport Head from 'next/head';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nexport default function Home({\n  launches\n}) {\n  console.log('launches', launches);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const client = new ApolloClient({\n    uri: 'https://api.spacex.land/graphql/',\n    cache: new InMemoryCache()\n  });\n  const {\n    data\n  } = await client.query({\n    query: gql`\n      query GetLaunches {\n        launchesPast(limit: 10) {\n          id\n          mission_name\n          launch_date_local\n          launch_site {\n            site_name_long\n          }\n          links {\n            article_link\n            video_link\n            mission_patch\n          }\n          rocket {\n            rocket_name\n          }\n        }\n      }\n    `\n  });\n  return {\n    props: {\n      launches: data.launchesPast\n    }\n  };\n}","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/pages/index.js"],"names":["Head","ApolloClient","InMemoryCache","gql","Home","launches","console","log","getStaticProps","client","uri","cache","data","query","props","launchesPast"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;AAGD,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BS,IAAAA,GAAG,EAAE,kCADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIT,aAAJ;AAFuB,GAAjB,CAAf;AAKA,QAAM;AAAEU,IAAAA;AAAF,MAAW,MAAMH,MAAM,CAACI,KAAP,CAAa;AAClCA,IAAAA,KAAK,EAAEV,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBsC,GAAb,CAAvB;AAuBA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLT,MAAAA,QAAQ,EAAEO,IAAI,CAACG;AADV;AADF,GAAP;AAKD","sourcesContent":["import Head from 'next/head'\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client'\n\nexport default function Home({ launches }) {\n\n  console.log('launches', launches);\n\n  return (\n    <div>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n      <h2>here</h2>\n\n      </main>\n\n    </div>\n  )\n}\n\n\nexport async function getStaticProps() {\n  const client = new ApolloClient({\n    uri: 'https://api.spacex.land/graphql/',\n    cache: new InMemoryCache()\n  });\n\n  const { data } = await client.query({\n    query: gql`\n      query GetLaunches {\n        launchesPast(limit: 10) {\n          id\n          mission_name\n          launch_date_local\n          launch_site {\n            site_name_long\n          }\n          links {\n            article_link\n            video_link\n            mission_patch\n          }\n          rocket {\n            rocket_name\n          }\n        }\n      }\n    `\n  });\n\n  return {\n    props: {\n      launches: data.launchesPast\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}