{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.js\";\nimport React, { useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst User = ({\n  from,\n  qty,\n  limit\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(USERS);\n\n  const getUsers = (from, qty, limit, data) => {\n    const firstUser = from - 1;\n    const lastUser = from + qty;\n    console.log('firstuser', +firstUser + 'lastuser');\n    const filteredUsers = data.users.filter((item, index) => {\n      return index >= firstUser && index <= lastUser;\n    });\n    return filteredUsers;\n  }; //const users = getUsers()\n\n\n  useEffect(() => {\n    console.log('users XXXX', getUsers(from, qty, limit, data));\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return data.users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.js"],"names":["React","useEffect","render","useQuery","gql","USERS","User","from","qty","limit","loading","error","data","getUsers","firstUser","lastUser","console","log","filteredUsers","users","filter","item","index","map","firstname","id"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAME,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACrC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACE,KAAD,CAAzC;;AAEA,QAAMQ,QAAQ,GAAG,CAACN,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBG,IAAnB,KAA4B;AACzC,UAAME,SAAS,GAAGP,IAAI,GAAG,CAAzB;AACA,UAAMQ,QAAQ,GAAGR,IAAI,GAAGC,GAAxB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,CAAEH,SAAF,GAAa,UAAtC;AACA,UAAMI,aAAa,GAAGN,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrD,aAAOA,KAAK,IAAIR,SAAT,IAAsBQ,KAAK,IAAIP,QAAtC;AACH,KAFqB,CAAtB;AAGA,WAAOG,aAAP;AACH,GATD,CAHqC,CAerC;;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BJ,QAAQ,CAACN,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBG,IAAnB,CAAnC;AACD,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAIA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACO,KAAL,CAAWI,GAAX,CAAgBF,IAAD,iBACpB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAA,gBACGA,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA;AADF,KAA2BH,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAQD,CAhCD;;AAkCA,eAAenB,IAAf","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst User = ({ from, qty, limit }) => {\n  const { loading, error, data } = useQuery(USERS);\n\n  const getUsers = (from, qty, limit, data) => {\n      const firstUser = from - 1;\n      const lastUser = from + qty;\n\n      console.log('firstuser', + firstUser+ 'lastuser')\n      const filteredUsers = data.users.filter((item, index) => {\n          return index >= firstUser && index <= lastUser;\n      })\n      return filteredUsers\n  }\n\n\n  //const users = getUsers()\n\n  useEffect(() => {\n    console.log( 'users XXXX', getUsers(from, qty, limit, data))\n  },[data])\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.users.map((item) => (\n    <div className=\"card\" key={item.id}>\n      <p>\n        {item.firstname}\n      </p>\n    </div>\n  ));\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}