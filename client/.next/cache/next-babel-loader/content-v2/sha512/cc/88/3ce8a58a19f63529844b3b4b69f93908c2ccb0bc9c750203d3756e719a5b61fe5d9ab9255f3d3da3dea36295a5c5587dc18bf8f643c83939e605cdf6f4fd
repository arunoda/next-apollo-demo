{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n      users {\\n      firstname\\n      lastname\\n      address\\n      city\\n      state\\n      country\\n      phone\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Card } from './Card';\nvar USERS = gql(_templateObject());\nexport var User = function User(_ref) {\n  _s();\n\n  var from = _ref.from,\n      qty = _ref.qty;\n\n  var _useQuery = useQuery(USERS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState([]),\n      filteredUsers = _useState[0],\n      setFilteredUsers = _useState[1];\n\n  var getUsers = function getUsers(from, qty) {\n    var lastUser = from + qty - 1;\n    var filteredUsers = data.users.filter(function (_item, index) {\n      return index <= lastUser;\n    });\n    return filteredUsers;\n  };\n\n  useEffect(function () {\n    if (data) {\n      setFilteredUsers(getUsers(from, qty));\n    }\n  }, [data, from]);\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(\"div\", {\n    className: \"cards\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    filteredUsers: filteredUsers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(User, \"wrrLrUqOSc/i3lVHy6oytoOECTU=\", false, function () {\n  return [useQuery];\n});\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.tsx"],"names":["React","useEffect","useState","useQuery","gql","Card","USERS","User","from","qty","loading","error","data","filteredUsers","setFilteredUsers","getUsers","lastUser","users","filter","_item","index"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AAGA,IAAMC,KAAK,GAAGF,GAAH,mBAAX;AAmBA,OAAO,IAAMG,IAAkC,GAAG,SAArCA,IAAqC,OAAmB;AAAA;;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAAA,kBAClCN,QAAQ,CAACG,KAAD,CAD0B;AAAA,MAC3DI,OAD2D,aAC3DA,OAD2D;AAAA,MAClDC,KADkD,aAClDA,KADkD;AAAA,MAC3CC,IAD2C,aAC3CA,IAD2C;;AAAA,kBAEvBV,QAAQ,CAAC,EAAD,CAFe;AAAA,MAE3DW,aAF2D;AAAA,MAE5CC,gBAF4C;;AAInE,MAAMC,QAAQ,GAAI,SAAZA,QAAY,CAACP,IAAD,EAAeC,GAAf,EAA+B;AAC7C,QAAMO,QAAQ,GAAGR,IAAI,GAAGC,GAAP,GAAa,CAA9B;AACA,QAAMI,aAAa,GAAGD,IAAI,CAACK,KAAL,CAAWC,MAAX,CAAkB,UAACC,KAAD,EAAgBC,KAAhB,EAAkC;AACtE,aAASA,KAAK,IAAIJ,QAAlB;AACH,KAFqB,CAAtB;AAIA,WAAOH,aAAP;AACH,GAPD;;AASAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGW,IAAH,EAAS;AACPE,MAAAA,gBAAgB,CAAEC,QAAQ,CAACP,IAAD,EAAOC,GAAP,CAAV,CAAhB;AACD;AACF,GAJQ,EAIP,CAACG,IAAD,EAAOJ,IAAP,CAJO,CAAT;AAMA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,aAAa,EAAGE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CA5BM;;GAAMN,I;UACsBJ,Q;;;KADtBI,I","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Card } from './Card';\nimport { FunctionComponent } from 'react';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\ntype ItemProps = {\n  from: number, \n  qty: number\n}\n\nexport const User: FunctionComponent<ItemProps> = ({ from, qty }) => {\n  const { loading, error, data } = useQuery(USERS);\n  const [ filteredUsers, setFilteredUsers ] = useState([])\n\n  const getUsers =  (from: number, qty: number) => {\n      const lastUser = from + qty - 1;\n      const filteredUsers = data.users.filter((_item: String, index: number) => {\n          return ( index <= lastUser );\n      })\n\n      return filteredUsers\n  }\n\n  useEffect(() => {\n    if(data) {\n      setFilteredUsers( getUsers(from, qty) );\n    }\n  },[data, from])\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className=\"cards\">\n      <Card filteredUsers={ filteredUsers } />\n    </div>\n  )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}