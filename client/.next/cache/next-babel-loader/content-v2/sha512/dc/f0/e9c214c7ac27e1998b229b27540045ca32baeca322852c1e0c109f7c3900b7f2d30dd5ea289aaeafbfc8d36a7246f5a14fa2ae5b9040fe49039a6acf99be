{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n      users {\\n      firstname\\n      lastname\\n      address\\n      city\\n      state\\n      country\\n      phone\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\nvar USERS = gql(_templateObject());\n\nvar User = function User(_ref) {\n  _s();\n\n  var from = _ref.from,\n      qty = _ref.qty,\n      limit = _ref.limit;\n\n  var _useQuery = useQuery(USERS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var getUsers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, qty, limit, data) {\n      var firstUser, lastUser, filteredUsers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              firstUser = from - 1;\n              lastUser = from + qty;\n              console.log('firstuser', +firstUser + 'lastuser');\n              filteredUsers = data.users.filter(function (item, index) {\n                return index >= firstUser && index <= lastUser;\n              });\n              return _context.abrupt(\"return\", filteredUsers);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUsers(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //const users = getUsers()\n\n\n  useEffect(function () {\n    console.log('users XXXX', getUsers(from, qty, limit, data));\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, _this);\n  return data.users.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, _this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this);\n  });\n};\n\n_s(User, \"MIyWK+WDGXozRNXYyIBuaVd7f4g=\", false, function () {\n  return [useQuery];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.js"],"names":["React","useEffect","render","useQuery","gql","USERS","User","from","qty","limit","loading","error","data","getUsers","firstUser","lastUser","console","log","filteredUsers","users","filter","item","index","map","firstname","id"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,IAAMC,KAAK,GAAGD,GAAH,mBAAX;;AAcA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAA0B;AAAA;;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACJN,QAAQ,CAACE,KAAD,CADJ;AAAA,MAC7BK,OAD6B,aAC7BA,OAD6B;AAAA,MACpBC,KADoB,aACpBA,KADoB;AAAA,MACbC,IADa,aACbA,IADa;;AAGrC,MAAMC,QAAQ;AAAA,yEAAI,iBAAON,IAAP,EAAaC,GAAb,EAAkBC,KAAlB,EAAyBG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRE,cAAAA,SADQ,GACIP,IAAI,GAAG,CADX;AAERQ,cAAAA,QAFQ,GAEGR,IAAI,GAAGC,GAFV;AAIdQ,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,CAAEH,SAAF,GAAa,UAAtC;AACMI,cAAAA,aALQ,GAKQN,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrD,uBAAOA,KAAK,IAAIR,SAAT,IAAsBQ,KAAK,IAAIP,QAAtC;AACH,eAFqB,CALR;AAAA,+CAQPG,aARO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA,oBAARL,QAAQ;AAAA;AAAA;AAAA,KAAd,CAHqC,CAerC;;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACfe,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BJ,QAAQ,CAACN,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBG,IAAnB,CAAnC;AACA,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAIA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,SAAOC,IAAI,CAACO,KAAL,CAAWI,GAAX,CAAe,UAACF,IAAD;AAAA,wBACpB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBACGA,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA;AADF,OAA2BH,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA,aADoB;AAAA,GAAf,CAAP;AAQD,CAhCD;;GAAMnB,I;UAC6BH,Q;;;KAD7BG,I;AAkCN,eAAeA,IAAf","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst User = ({ from, qty, limit }) => {\n  const { loading, error, data } = useQuery(USERS);\n\n  const getUsers =  async (from, qty, limit, data) => {\n      const firstUser = from - 1;\n      const lastUser = from + qty;\n\n      console.log('firstuser', + firstUser+ 'lastuser')\n      const filteredUsers = data.users.filter((item, index) => {\n          return index >= firstUser && index <= lastUser;\n      })\n      return filteredUsers\n  }\n\n\n  //const users = getUsers()\n\n  useEffect(() => {\n   console.log( 'users XXXX', getUsers(from, qty, limit, data))\n  },[data])\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.users.map((item) => (\n    <div className=\"card\" key={item.id}>\n      <p>\n        {item.firstname}\n      </p>\n    </div>\n  ));\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}