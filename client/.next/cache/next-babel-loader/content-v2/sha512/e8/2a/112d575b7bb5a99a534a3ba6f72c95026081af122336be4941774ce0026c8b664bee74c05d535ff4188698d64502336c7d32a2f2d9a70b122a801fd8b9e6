{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/gslinn/projects/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n      users {\\n      firstname\\n      lastname\\n      address\\n      city\\n      state\\n      country\\n      phone\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\nvar USERS = gql(_templateObject());\n\nvar User = function User(from, qty, limit) {\n  _s();\n\n  var _useQuery = useQuery(USERS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var getUsers = function getUsers(from, qty, limit) {\n    var firstUser = from - 1;\n    var lastUser = from * USER_LIMIT;\n    var filteredUsers = users.filter(function (item, index) {\n      return index >= firstUser && index <= lastUser;\n    });\n    return filteredUsers;\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, _this);\n  return data.users.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, _this);\n  });\n};\n\n_s(User, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.js"],"names":["React","render","useQuery","gql","USERS","User","from","qty","limit","loading","error","data","getUsers","firstUser","lastUser","USER_LIMIT","filteredUsers","users","filter","item","index","map","firstname","id"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,IAAMC,KAAK,GAAGD,GAAH,mBAAX;;AAcA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAsB;AAAA;;AAAA,kBACAN,QAAQ,CAACE,KAAD,CADR;AAAA,MACzBK,OADyB,aACzBA,OADyB;AAAA,MAChBC,KADgB,aAChBA,KADgB;AAAA,MACTC,IADS,aACTA,IADS;;AAGjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACN,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAsB;AACnC,QAAMK,SAAS,GAAGP,IAAI,GAAG,CAAzB;AACA,QAAMQ,QAAQ,GAAGR,IAAI,GAAGS,UAAxB;AACA,QAAMC,aAAa,GAAGC,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChD,aAAOA,KAAK,IAAIP,SAAT,IAAsBO,KAAK,IAAIN,QAAtC;AACH,KAFqB,CAAtB;AAGA,WAAOE,aAAP;AACH,GAPD;;AASA,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,SAAOC,IAAI,CAACM,KAAL,CAAWI,GAAX,CAAe,UAACF,IAAD;AAAA,wBACpB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBACGA,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA;AADF,OAA2BH,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA,aADoB;AAAA,GAAf,CAAP;AAQD,CAvBD;;GAAMlB,I;UAC6BH,Q;;;KAD7BG,I;AAyBN,eAAeA,IAAf","sourcesContent":["\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst User = (from, qty, limit) => {\n  const { loading, error, data } = useQuery(USERS);\n\n  const getUsers = (from, qty, limit) => {\n      const firstUser = from - 1;\n      const lastUser = from * USER_LIMIT;\n      const filteredUsers = users.filter((item, index) => {\n          return index >= firstUser && index <= lastUser;\n      })\n      return filteredUsers\n  }\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.users.map((item) => (\n    <div className=\"card\" key={item.id}>\n      <p>\n        {item.firstname}\n      </p>\n    </div>\n  ));\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}