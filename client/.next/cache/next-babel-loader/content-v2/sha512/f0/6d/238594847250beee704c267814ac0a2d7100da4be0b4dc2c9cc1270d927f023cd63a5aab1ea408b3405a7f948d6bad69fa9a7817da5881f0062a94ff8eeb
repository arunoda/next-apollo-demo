{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gslinn/projects/next-apollo-demo/client/components/User.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst Users = (from, limit) => {\n  // const { loading, error, data } = useQuery(USERS);\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error :(</p>;\n  // return data.rates.map((item) => (\n  //   <div key={item.id}>\n  //     <p>\n  //       {firstname}\n  //     </p>\n  //   </div>\n  // ));\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/gslinn/projects/next-apollo-demo/client/components/User.js"],"names":["React","render","useQuery","gql","USERS","Users","from","limit"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAME,KAAK,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA,2BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AACD,CAfD;;AAiBA,eAAeF,KAAf","sourcesContent":["\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useQuery, gql } from '@apollo/client';\n\nconst USERS = gql`\n  {\n      users {\n      firstname\n      lastname\n      address\n      city\n      state\n      country\n      phone\n    }\n  }\n`;\n\nconst Users = (from, limit) => {\n  // const { loading, error, data } = useQuery(USERS);\n\n\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error :(</p>;\n\n  // return data.rates.map((item) => (\n  //   <div key={item.id}>\n  //     <p>\n  //       {firstname}\n  //     </p>\n  //   </div>\n  // ));\n  <div><h1>here</h1></div>\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}